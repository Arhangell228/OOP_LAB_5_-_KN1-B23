using System; // Підключення простору імен System
using System.Linq; // Підключення LINQ для роботи з масивами
using System.Text; // Підключення Text для налаштування кодування

// Оголошення інтерфейсу IFigure
interface IFigure
{
    void ВивестиТип(); // Метод для виведення типу фігури
    void ВивестиПлощу(); // Метод для виведення площі фігури
    double ПершийРозмір { get; set; } // Властивість першого лінійного розміру
    double ДругийРозмір { get; set; } // Властивість другого лінійного розміру
    void ВивестиДіагональ(); // Метод для виведення довжини діагоналі
}

// Оголошення інтерфейсу IColoredFigure, що успадковується від IFigure
interface IColoredFigure : IFigure
{
    string Колір { get; set; } // Властивість для кольору фігури
    void ВивестиКолір(); // Метод для виведення кольору фігури
}

// Оголошення класу Прямокутник, що реалізує інтерфейс IFigure
class Прямокутник : IFigure
{
    public double ПершийРозмір { get; set; } // Реалізація першого розміру
    public double ДругийРозмір { get; set; } // Реалізація другого розміру

    public Прямокутник(double ширина, double висота) // Конструктор класу
    {
        ПершийРозмір = ширина;
        ДругийРозмір = висота;
    }

    public void ВивестиТип() // Реалізація методу для виведення типу
    {
        Console.WriteLine("Тип фігури: Прямокутник");
    }

    public void ВивестиПлощу() // Реалізація методу для обчислення та виведення площі
    {
        Console.WriteLine($"Площа: {ПершийРозмір * ДругийРозмір}");
    }

    public void ВивестиДіагональ() // Реалізація методу для обчислення та виведення діагоналі
    {
        double діагональ = Math.Sqrt(Math.Pow(ПершийРозмір, 2) + Math.Pow(ДругийРозмір, 2));
        Console.WriteLine($"Діагональ: {діагональ}");
    }
}

// Оголошення класу КольоровийПрямокутник, що реалізує інтерфейс IColoredFigure
class КольоровийПрямокутник : Прямокутник, IColoredFigure
{
    public string Колір { get; set; } // Реалізація властивості кольору

    public КольоровийПрямокутник(double ширина, double висота, string колір) : base(ширина, висота) // Конструктор
    {
        Колір = колір;
    }

    public void ВивестиКолір() // Реалізація методу для виведення кольору
    {
        Console.WriteLine($"Колір: {Колір}");
    }
}

// Основний клас програми
class Програма
{
    static void Main()
    {
        Console.OutputEncoding = Encoding.UTF8; // Встановлення кодування для коректного відображення української мови
        Console.InputEncoding = Encoding.UTF8;
        
        // Створення масиву об'єктів фігур
        IFigure[] фігури = new IFigure[]
        {
            new Прямокутник(5, 10), // Створення звичайних прямокутників
            new Прямокутник(3, 6),
            new Прямокутник(7, 4),
            new КольоровийПрямокутник(8, 5, "Червоний"), // Створення кольорових прямокутників
            new КольоровийПрямокутник(6, 9, "Синій"),
            new КольоровийПрямокутник(4, 4, "Зелений")
        };

        Console.WriteLine("Всі фігури:");
        foreach (var фігура in фігури) // Цикл для виведення інформації про всі фігури
        {
            фігура.ВивестиТип();
            фігура.ВивестиПлощу();
            фігура.ВивестиДіагональ();
            if (фігура is IColoredFigure кольороваФігура) // Перевірка, чи фігура має колір
            {
                кольороваФігура.ВивестиКолір();
            }
            Console.WriteLine("----------------");
        }

        var кольоровіФігури = фігури.OfType<IColoredFigure>().ToArray(); // Вибір тільки кольорових фігур

        Console.WriteLine("Кольорові фігури:");
        foreach (var кольороваФігура in кольоровіФігури) // Цикл для виведення інформації про кольорові фігури
        {
            кольороваФігура.ВивестиТип();
            кольороваФігура.ВивестиПлощу();
            кольороваФігура.ВивестиДіагональ();
            кольороваФігура.ВивестиКолір();
            Console.WriteLine("----------------");
        }
    }
}
